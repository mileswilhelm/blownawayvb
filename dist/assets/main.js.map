{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./.modernizrrc.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","console","log","hadGlobal","oldGlobal","Modernizr","document","undefined","tests","ModernizrProto","_version","_config","_q","on","test","cb","self","this","setTimeout","addTest","fn","options","addAsyncTest","classes","is","obj","type","hasOwnProp","_hasOwnProperty","docElement","documentElement","isSVG","nodeName","toLowerCase","setClasses","className","classPrefix","baseVal","enableJSClass","reJS","RegExp","replace","enableClasses","join","feature","featureNameSplit","split","last","Boolean","_trigger","createElement","arguments","createElementNS","constructor","_l","res","cbs","supportsHtml5Styles","supportsUnknownElements","html5","reSkip","saveClones","expanID","expandoData","addStyleSheet","ownerDocument","cssText","parent","getElementsByTagName","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","getExpandoData","node","cache","cloneNode","createElem","canHaveChildren","tagUrn","frag","appendChild","shivDocument","shivCSS","hasCSS","createFrag","createDocumentFragment","shivMethods","Function","a","childNodes","e","clone","elems","addElements","newElements","docEl","reMedia","supportsShivableSheets","namespaces","parentWindow","applyElement","removeNode","attachEvent","createWrapper","element","nodes","attributes","index","wrapper","shivNamespace","specified","setAttribute","nodeValue","style","shivPrint","shivedSheet","wrappers","ownerWindow","printShived","removeSheet","clearTimeout","_removeSheetTimer","add","imports","sheet","collection","styleSheets","sheets","Array","pop","disabled","media","er","pair","parts","reElements","shivCssText","reverse","addWrappers","removeWrappers","modElem","elem","mStyle","injectElementWithStyles","rule","callback","testnames","ret","docOverflow","mod","div","body","fake","getBody","parseInt","id","styleSheet","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","domToCSS","str","m1","nativeTestProps","props","CSS","supports","conditionText","pseudo","prop","getComputedStyle","getPropertyValue","error","currentStyle","computedStyle","testProps","prefixed","skipValueTest","afterInit","propsLength","before","cleanElems","indexOf","m2","toUpperCase","unshift","testProp","useValue","fnBind","that","getContext","canvas","fillText","canvastext","ctx","offset","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","fillStyle","textBaseline","font","getImageData","cssomPrefixes","usePrefixes","_cssomPrefixes","domPrefixes","testPropsAll","ucProp","charAt","item","testDOMProps","testAllProps","_domPrefixes","Promise","resolve","featureNames","aliasIdx","nameIdx","featureIdx","aliases","testRunner"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import 'modernizr';\n\n// eslint-disable-next-line\nconsole.log('🐶');\n",";(function(window){var hadGlobal='Modernizr' in window;var oldGlobal=window.Modernizr;/*!\n * modernizr v3.8.0\n * Build https://modernizr.com/download?-emoji-flexbox-promises-addtest-fnbind-printshiv-setclasses-testprop-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n *  Veeck\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n\n  var tests = [];\n  \n\n  /**\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.8.0',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean} true if the typeof the first parameter is exactly the specified type, false otherwise\n   */\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   * @returns {void}\n   */\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already or if it doesnt exist yet (like inputtypes)\n            if (!Modernizr[featureNameSplit[0]] || Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      if (classes.length > 0) {\n        className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      }\n      if (isSVG) {\n        docElement.className.baseVal = className;\n      } else {\n        docElement.className = className;\n      }\n    }\n  }\n\n  ;\n\n  /**\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\n   *\n   * @author kangax\n   * @access private\n   * @function hasOwnProp\n   * @param {object} object - The object to check for a property\n   * @param {string} property - The property to check for\n   * @returns {boolean}\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n  \n\n\n  // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\n   * Modernizr.on is a way to listen for the completion of async tests. Being\n   * asynchronous, they may not finish before your scripts run. As a result you\n   * will get a possibly false negative `undefined` value.\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.on\n   * @access public\n   * @function on\n   * @param {string} feature - String name of the feature detect\n   * @param {Function} cb - Callback function returning a Boolean - true if feature is supported, false if not\n   * @returns {void}\n   * @example\n   *\n   * ```js\n   * Modernizr.on('flash', function( result ) {\n   *   if (result) {\n   *    // the browser has flash\n   *   } else {\n   *     // the browser does not have flash\n   *   }\n   * });\n   * ```\n   */\n  ModernizrProto.on = function(feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\n   * _trigger is the private function used to signal test completion and run any\n   * callbacks registered through [Modernizr.on](#modernizr-on)\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._trigger\n   * @access private\n   * @function _trigger\n   * @param {string} feature - string name of the feature detect\n   * @param {Function|boolean} [res] - A feature detection function, or the boolean =\n   * result of a feature detection function\n   * @returns {void}\n   */\n  ModernizrProto._trigger = function(feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\n   * addTest allows you to define your own feature detects that are not currently\n   * included in Modernizr (under the covers it's the exact same code Modernizr\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)).\n   * Just like the official detects, the result\n   * will be added onto the Modernizr object, as well as an appropriate className set on\n   * the html element when configured to do so\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.addTest\n   * @optionName Modernizr.addTest()\n   * @optionProp addTest\n   * @access public\n   * @function addTest\n   * @param {string|Object} feature - The string name of the feature detect, or an\n   * object of feature detect names and test\n   * @param {Function|boolean} test - Function returning true if feature is supported,\n   * false if not. Otherwise a boolean representing the results of a feature detection\n   * @returns {Object} the Modernizr object to allow chaining\n   * @example\n   *\n   * The most common way of creating your own feature detects is by calling\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\n   * punctuation), and a function you want executed that will return a boolean result\n   *\n   * ```js\n   * Modernizr.addTest('itsTuesday', function() {\n   *  var d = new Date();\n   *  return d.getDay() === 2;\n   * });\n   * ```\n   *\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\n   * and to `false` every other day of the week. One thing to notice is that the names of\n   * feature detect functions are always lowercased when added to the Modernizr object. That\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\n   *\n   *\n   *  Since we only look at the returned value from any feature detection function,\n   *  you do not need to actually use a function. For simple detections, just passing\n   *  in a statement that will return a boolean value works just fine.\n   *\n   * ```js\n   * Modernizr.addTest('hasjquery', 'jQuery' in window);\n   * ```\n   *\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\n   * jQuery has been included on the page. Not using a function saves a small amount\n   * of overhead for the browser, as well as making your code much more readable.\n   *\n   * Finally, you also have the ability to pass in an object of feature names and\n   * their tests. This is handy if you want to add multiple detections in one go.\n   * The keys should always be a string, and the value can be either a boolean or\n   * function that returns a boolean.\n   *\n   * ```js\n   * var detects = {\n   *  'hasjquery': 'jQuery' in window,\n   *  'itstuesday': function() {\n   *    var d = new Date();\n   *    return d.getDay() === 2;\n   *  }\n   * }\n   *\n   * Modernizr.addTest(detects);\n   * ```\n   *\n   * There is really no difference between the first methods and this one, it is\n   * just a convenience to let you write more readable code.\n   */\n  function addTest(feature, test) {\n\n    if (typeof feature === 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[ key ]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length === 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last !== 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test === 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length === 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      setClasses([(!!test && test !== false ? '' : 'no-') + featureNameSplit.join('-')]);\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n  \n\n\n  /**\n   * @optionName html5printshiv\n   * @optionProp html5printshiv\n   */\n\n  // Take the html5 variable out of the html5shiv scope so we can return it.\n  var html5;\n  if (!isSVG) {\n    /**\n     * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n      /*jshint evil:true */\n      /** version */\n      var version = '3.7.3';\n\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n              typeof frag.createDocumentFragment == 'undefined' ||\n              typeof frag.createElement == 'undefined'\n            );\n          }());\n        } catch(e) {\n          // assign a false positive if detection fails => unable to shiv\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n      /**\n       * Extends the built-in list of html5 elements\n       * @memberOf html5\n       * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n       * @param {Document} ownerDocument The context document.\n       */\n      function addElements(newElements, ownerDocument) {\n        var elements = html5.elements;\n        if(typeof elements != 'string'){\n          elements = elements.join(' ');\n        }\n        if(typeof newElements != 'string'){\n          newElements = newElements.join(' ');\n        }\n        html5.elements = elements +' '+ newElements;\n        shivDocument(ownerDocument);\n      }\n\n      /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n          data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n          node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n        for(;i<l;i++){\n          clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n          'var n=f.cloneNode(),c=n.createElement;' +\n          'h.shivMethods&&(' +\n          // unroll the `createElement` calls\n          getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n          ');return n}'\n        )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n            // corrects block display not defined in IE6/7/8/9\n            'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n            // adds styling not present in IE6/7/8/9\n            'mark{background:#FF0;color:#000}' +\n            // hides non-rendered elements\n            'template{display:none}'\n          );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n        /**\n         * current version of html5shiv\n         */\n        'version': version,\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment,\n\n        //extends list of elements\n        addElements: addElements\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n      /*------------------------------- Print Shiv -------------------------------*/\n\n      /** Used to filter media types */\n      var reMedia = /^$|\\b(?:all|print)\\b/;\n\n      /** Used to namespace printable elements */\n      var shivNamespace = 'html5shiv';\n\n      /** Detect whether the browser supports shivable style sheets */\n      var supportsShivableSheets = !supportsUnknownElements && (function() {\n        // assign a false negative if unable to shiv\n        var docEl = document.documentElement;\n        return !(\n          typeof document.namespaces == 'undefined' ||\n          typeof document.parentWindow == 'undefined' ||\n          typeof docEl.applyElement == 'undefined' ||\n          typeof docEl.removeNode == 'undefined' ||\n          typeof window.attachEvent == 'undefined'\n        );\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Wraps all HTML5 elements in the given document with printable elements.\n       * (eg. the \"header\" element is wrapped with the \"html5shiv:header\" element)\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Array} An array wrappers added.\n       */\n      function addWrappers(ownerDocument) {\n        var node,\n          nodes = ownerDocument.getElementsByTagName('*'),\n          index = nodes.length,\n          reElements = RegExp('^(?:' + getElements().join('|') + ')$', 'i'),\n          result = [];\n\n        while (index--) {\n          node = nodes[index];\n          if (reElements.test(node.nodeName)) {\n            result.push(node.applyElement(createWrapper(node)));\n          }\n        }\n        return result;\n      }\n\n      /**\n       * Creates a printable wrapper for the given element.\n       * @private\n       * @param {Element} element The element.\n       * @returns {Element} The wrapper.\n       */\n      function createWrapper(element) {\n        var node,\n          nodes = element.attributes,\n          index = nodes.length,\n          wrapper = element.ownerDocument.createElement(shivNamespace + ':' + element.nodeName);\n\n        // copy element attributes to the wrapper\n        while (index--) {\n          node = nodes[index];\n          node.specified && wrapper.setAttribute(node.nodeName, node.nodeValue);\n        }\n        // copy element styles to the wrapper\n        wrapper.style.cssText = element.style.cssText;\n        return wrapper;\n      }\n\n      /**\n       * Shivs the given CSS text.\n       * (eg. header{} becomes html5shiv\\:header{})\n       * @private\n       * @param {String} cssText The CSS text to shiv.\n       * @returns {String} The shived CSS text.\n       */\n      function shivCssText(cssText) {\n        var pair,\n          parts = cssText.split('{'),\n          index = parts.length,\n          reElements = RegExp('(^|[\\\\s,>+~])(' + getElements().join('|') + ')(?=[[\\\\s,>+~#.:]|$)', 'gi'),\n          replacement = '$1' + shivNamespace + '\\\\:$2';\n\n        while (index--) {\n          pair = parts[index] = parts[index].split('}');\n          pair[pair.length - 1] = pair[pair.length - 1].replace(reElements, replacement);\n          parts[index] = pair.join('}');\n        }\n        return parts.join('{');\n      }\n\n      /**\n       * Removes the given wrappers, leaving the original elements.\n       * @private\n       * @params {Array} wrappers An array of printable wrappers.\n       */\n      function removeWrappers(wrappers) {\n        var index = wrappers.length;\n        while (index--) {\n          wrappers[index].removeNode();\n        }\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document for print.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivPrint(ownerDocument) {\n        var shivedSheet,\n          wrappers,\n          data = getExpandoData(ownerDocument),\n          namespaces = ownerDocument.namespaces,\n          ownerWindow = ownerDocument.parentWindow;\n\n        if (!supportsShivableSheets || ownerDocument.printShived) {\n          return ownerDocument;\n        }\n        if (typeof namespaces[shivNamespace] == 'undefined') {\n          namespaces.add(shivNamespace);\n        }\n\n        function removeSheet() {\n          clearTimeout(data._removeSheetTimer);\n          if (shivedSheet) {\n            shivedSheet.removeNode(true);\n          }\n          shivedSheet= null;\n        }\n\n        ownerWindow.attachEvent('onbeforeprint', function() {\n\n          removeSheet();\n\n          var imports,\n            length,\n            sheet,\n            collection = ownerDocument.styleSheets,\n            cssText = [],\n            index = collection.length,\n            sheets = Array(index);\n\n          // convert styleSheets collection to an array\n          while (index--) {\n            sheets[index] = collection[index];\n          }\n          // concat all style sheet CSS text\n          while ((sheet = sheets.pop())) {\n            // IE does not enforce a same origin policy for external style sheets...\n            // but has trouble with some dynamically created stylesheets\n            if (!sheet.disabled && reMedia.test(sheet.media)) {\n\n              try {\n                imports = sheet.imports;\n                length = imports.length;\n              } catch(er){\n                length = 0;\n              }\n\n              for (index = 0; index < length; index++) {\n                sheets.push(imports[index]);\n              }\n\n              try {\n                cssText.push(sheet.cssText);\n              } catch(er){}\n            }\n          }\n\n          // wrap all HTML5 elements with printable elements and add the shived style sheet\n          cssText = shivCssText(cssText.reverse().join(''));\n          wrappers = addWrappers(ownerDocument);\n          shivedSheet = addStyleSheet(ownerDocument, cssText);\n\n        });\n\n        ownerWindow.attachEvent('onafterprint', function() {\n          // remove wrappers, leaving the original elements, and remove the shived style sheet\n          removeWrappers(wrappers);\n          clearTimeout(data._removeSheetTimer);\n          data._removeSheetTimer = setTimeout(removeSheet, 500);\n        });\n\n        ownerDocument.printShived = true;\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose API\n      html5.type += ' print';\n      html5.shivPrint = shivPrint;\n\n      // shiv for print\n      shivPrint(document);\n\n      if(typeof module == 'object' && module.exports){\n        module.exports = html5;\n      }\n\n    }(typeof window !== \"undefined\" ? window : this, document));\n  }\n\n  ;\n\n  /**\n   * contains checks to see if a string contains another string\n   *\n   * @access private\n   * @function contains\n   * @param {string} str - The string we want to check for substrings\n   * @param {string} substr - The substring we want to search the first string for\n   * @returns {boolean} true if and only if the first string 'str' contains the second string 'substr'\n   */\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   *\n   * @access private\n   */\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n  \n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n  \n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {Function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean} the result of the specified callback test\n   */\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      // eslint-disable-next-line\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n  }\n\n  ;\n\n  /**\n   * domToCSS takes a camelCase string and converts it to kebab-case\n   * e.g. boxSizing -> box-sizing\n   *\n   * @access private\n   * @function domToCSS\n   * @param {string} name - String name of camelCase prop we want to convert\n   * @returns {string} The kebab-case version of the supplied name\n   */\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n\n  ;\n\n\n  /**\n   * wrapper around getComputedStyle, to fix issues with Firefox returning null when\n   * called inside of a hidden iframe\n   *\n   * @access private\n   * @function computedStyle\n   * @param {HTMLElement|SVGElement} elem - The element we want to find the computed styles of\n   * @param {string|null} [pseudo] - An optional pseudo element selector (e.g. :before), of null if none\n   * @param {string} prop - A CSS property\n   * @returns {CSSStyleDeclaration} the value of the specified CSS property\n   */\n  function computedStyle(elem, pseudo, prop) {\n    var result;\n\n    if ('getComputedStyle' in window) {\n      result = getComputedStyle.call(window, elem, pseudo);\n      var console = window.console;\n\n      if (result !== null) {\n        if (prop) {\n          result = result.getPropertyValue(prop);\n        }\n      } else {\n        if (console) {\n          var method = console.error ? 'error' : 'log';\n          console[method].call(console, 'getComputedStyle returning null, its possible modernizr test results are inaccurate');\n        }\n      }\n    } else {\n      result = !pseudo && elem.currentStyle && elem.currentStyle[prop];\n    }\n\n    return result;\n  }\n\n  ;\n\n  /**\n   * nativeTestProps allows for us to use native feature detection functionality if available.\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @access private\n   * @function nativeTestProps\n   * @param {array} props - An array of property names\n   * @param {string} value - A string representing the value we want to check via @supports\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\n   */\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: https://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\n        return computedStyle(node, null, 'position') === 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  /**\n   * cssToDOM takes a kebab-case string and converts it to camelCase\n   * e.g. box-sizing -> boxSizing\n   *\n   * @access private\n   * @function cssToDOM\n   * @param {string} name - String name of kebab-case prop we want to convert\n   * @returns {string} The camelCase version of the supplied name\n   */\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use.\n\n    // Inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    // For strict XHTML browsers the hardly used samp element is used.\n    var elems = ['modernizr', 'tspan', 'samp'];\n    while (!mStyle.style && elems.length) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] !== before) {\n            cleanElems();\n            return prefixed === 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed === 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\n   * testProp() investigates whether a given style property is recognized\n   * Property names can be provided in either camelCase or kebab-case.\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.testProp\n   * @access public\n   * @optionName Modernizr.testProp()\n   * @optionProp testProp\n   * @function testProp\n   * @param {string} prop - Name of the CSS property to check\n   * @param {string} [value] - Name of the CSS value to check\n   * @param {boolean} [useValue] - Whether or not to check the value if @supports isn't supported\n   * @returns {boolean} an empty string if the property is supported, undefined if its unsupported\n   * @example\n   *\n   * Just like [testAllProps](#modernizr-testallprops), only it does not check any vendor prefixed\n   * version of the string.\n   *\n   * Note that the property name must be provided in camelCase (e.g. boxSizing not box-sizing)\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents')  // true\n   * ```\n   *\n   * You can also provide a value as an optional second argument to check if a\n   * specific value is supported\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents', 'none') // true\n   * Modernizr.testProp('pointerEvents', 'penguin') // false\n   * ```\n   */\n  var testProp = ModernizrProto.testProp = function(prop, value, useValue) {\n    return testProps([prop], undefined, value, useValue);\n  };\n\n  \n\n  /**\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\n   *\n   * @access private\n   * @function fnBind\n   * @param {Function} fn - a function you want to change `this` reference to\n   * @param {Object} that - the `this` you want to call the function with\n   * @returns {Function} The wrapped version of the supplied function\n   */\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n/*!\n{\n  \"name\": \"Canvas\",\n  \"property\": \"canvas\",\n  \"caniuse\": \"canvas\",\n  \"tags\": [\"canvas\", \"graphics\"],\n  \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\n}\n!*/\n/* DOC\nDetects support for the `<canvas>` element for 2D drawing.\n*/\n\n  // On the S60 and BB Storm, getContext exists, but always returns undefined\n  // so we actually have to call getContext() to verify\n  // github.com/Modernizr/Modernizr/issues/issue/97/\n  Modernizr.addTest('canvas', function() {\n    var elem = createElement('canvas');\n    return !!(elem.getContext && elem.getContext('2d'));\n  });\n\n/*!\n{\n  \"name\": \"Canvas text\",\n  \"property\": \"canvastext\",\n  \"caniuse\": \"canvas-text\",\n  \"tags\": [\"canvas\", \"graphics\"],\n  \"polyfills\": [\"canvastext\"]\n}\n!*/\n/* DOC\nDetects support for the text APIs for `<canvas>` elements.\n*/\n\n  Modernizr.addTest('canvastext', function() {\n    if (Modernizr.canvas === false) {\n      return false;\n    }\n    return typeof createElement('canvas').getContext('2d').fillText === 'function';\n  });\n\n/*!\n{\n  \"name\": \"Emoji\",\n  \"property\": \"emoji\"\n}\n!*/\n/* DOC\nDetects support for emoji character sets.\n*/\n\n  Modernizr.addTest('emoji', function() {\n    if (!Modernizr.canvastext) {\n      return false;\n    }\n    var node = createElement('canvas');\n    var ctx = node.getContext('2d');\n    var backingStoreRatio =\n      ctx.webkitBackingStorePixelRatio ||\n      ctx.mozBackingStorePixelRatio ||\n      ctx.msBackingStorePixelRatio ||\n      ctx.oBackingStorePixelRatio ||\n      ctx.backingStorePixelRatio ||\n      1;\n    var offset = 12 * backingStoreRatio;\n    ctx.fillStyle = '#f00';\n    ctx.textBaseline = 'top';\n    ctx.font = '32px Arial';\n    ctx.fillText('\\ud83d\\udc28', 0, 0); // U+1F428 KOALA\n    return ctx.getImageData(offset, offset, 1, 1).data[0] !== 0;\n  });\n\n\n  /**\n   * If the browsers follow the spec, then they would expose vendor-specific styles as:\n   *   elem.style.WebkitBorderRadius\n   * instead of something like the following (which is technically incorrect):\n   *   elem.style.webkitBorderRadius\n\n   * WebKit ghosts their properties in lowercase but Opera & Moz do not.\n   * Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n   *   erik.eae.net/archives/2008/03/10/21.48.10/\n\n   * More here: github.com/Modernizr/Modernizr/issues/issue/21\n   *\n   * @access private\n   * @returns {string} The string representing the vendor-specific style properties\n   */\n  var omPrefixes = 'Moz O ms Webkit';\n  \n\n  var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\n  \n\n  /**\n   * List of JavaScript DOM values used for tests\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._domPrefixes\n   * @optionName Modernizr._domPrefixes\n   * @optionProp domPrefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._domPrefixes is exactly the same as [_prefixes](#modernizr-_prefixes), but rather\n   * than kebab-case properties, all properties are their Capitalized variant\n   *\n   * ```js\n   * Modernizr._domPrefixes === [ \"Moz\", \"O\", \"ms\", \"Webkit\" ];\n   * ```\n   */\n  var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n  ModernizrProto._domPrefixes = domPrefixes;\n  \n\n  /**\n   * testDOMProps is a generic DOM property test; if a browser supports\n   *   a certain property, it won't return undefined for it.\n   *\n   * @access private\n   * @function testDOMProps\n   * @param {Array<string>} props - An array of properties to test for\n   * @param {Object} obj - An object or Element you want to use to test the parameters again\n   * @param {boolean|Object} elem - An Element to bind the property lookup again. Use `false` to prevent the check\n   * @returns {false|*} returns false if the prop is unsupported, otherwise the value that is supported\n   */\n  function testDOMProps(props, obj, elem) {\n    var item;\n\n    for (var i in props) {\n      if (props[i] in obj) {\n\n        // return the property name as a string\n        if (elem === false) {\n          return props[i];\n        }\n\n        item = obj[props[i]];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // bind to obj unless overridden\n          return fnBind(item, elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  ;\n\n  /**\n   * testPropsAll tests a list of DOM properties we want to check against.\n   * We specify literally ALL possible (known and/or likely) properties on\n   * the element including the non-vendor prefixed one, for forward-\n   * compatibility.\n   *\n   * @access private\n   * @function testPropsAll\n   * @param {string} prop - A string of the property to test for\n   * @param {string|Object} [prefixed] - An object to check the prefixed properties on. Use a string to skip\n   * @param {HTMLElement|SVGElement} [elem] - An element used to test the property and value against\n   * @param {string} [value] - A string of a css value\n   * @param {boolean} [skipValueTest] - An boolean representing if you want to test if value sticks when set\n   * @returns {false|string} returns the string version of the property, or false if it is unsupported\n   */\n  function testPropsAll(prop, prefixed, elem, value, skipValueTest) {\n\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n      props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if (is(prefixed, 'string') || is(prefixed, 'undefined')) {\n      return testProps(props, prefixed, value, skipValueTest);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n\n  // Modernizr.testAllProps() investigates whether a given style property,\n  // or any of its vendor-prefixed variants, is recognized\n  //\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  ModernizrProto.testAllProps = testPropsAll;\n\n  \n\n  /**\n   * testAllProps determines whether a given CSS property is supported in the browser\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.testAllProps\n   * @optionName Modernizr.testAllProps()\n   * @optionProp testAllProps\n   * @access public\n   * @function testAllProps\n   * @param {string} prop - String naming the property to test (either camelCase or kebab-case)\n   * @param {string} [value] - String of the value to test\n   * @param {boolean} [skipValueTest=false] - Whether to skip testing that the value is supported when using non-native detection\n   * @returns {false|string} returns the string version of the property, or false if it is unsupported\n   * @example\n   *\n   * testAllProps determines whether a given CSS property, in some prefixed form,\n   * is supported by the browser.\n   *\n   * ```js\n   * testAllProps('boxSizing')  // true\n   * ```\n   *\n   * It can optionally be given a CSS value in string form to test if a property\n   * value is valid\n   *\n   * ```js\n   * testAllProps('display', 'block') // true\n   * testAllProps('display', 'penguin') // false\n   * ```\n   *\n   * A boolean can be passed as a third parameter to skip the value check when\n   * native detection (@supports) isn't available.\n   *\n   * ```js\n   * testAllProps('shapeOutside', 'content-box', true);\n   * ```\n   */\n  function testAllProps(prop, value, skipValueTest) {\n    return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n  }\n\n  ModernizrProto.testAllProps = testAllProps;\n\n  \n/*!\n{\n  \"name\": \"Flexbox\",\n  \"property\": \"flexbox\",\n  \"caniuse\": \"flexbox\",\n  \"tags\": [\"css\"],\n  \"notes\": [{\n    \"name\": \"The _new_ flexbox\",\n    \"href\": \"https://www.w3.org/TR/css-flexbox-1/\"\n  }],\n  \"warnings\": [\n    \"A `true` result for this detect does not imply that the `flex-wrap` property is supported; see the `flexwrap` detect.\"\n  ]\n}\n!*/\n/* DOC\nDetects support for the Flexible Box Layout model, a.k.a. Flexbox, which allows easy manipulation of layout order and sizing within a container.\n*/\n\n  Modernizr.addTest('flexbox', testAllProps('flexBasis', '1px', true));\n\n/*!\n{\n  \"name\": \"ES6 Promises\",\n  \"property\": \"promises\",\n  \"caniuse\": \"promises\",\n  \"polyfills\": [\"es6promises\"],\n  \"authors\": [\"Krister Kari\", \"Jake Archibald\"],\n  \"tags\": [\"es6\"],\n  \"notes\": [{\n    \"name\": \"The ES6 promises spec\",\n    \"href\": \"https://github.com/domenic/promises-unwrapping\"\n  },{\n    \"name\": \"Chromium dashboard - ES6 Promises\",\n    \"href\": \"https://www.chromestatus.com/features/5681726336532480\"\n  },{\n    \"name\": \"JavaScript Promises: an Introduction\",\n    \"href\": \"https://developers.google.com/web/fundamentals/primers/promises/\"\n  }]\n}\n!*/\n/* DOC\nCheck if browser implements ECMAScript 6 Promises per specification.\n*/\n\n  Modernizr.addTest('promises', function() {\n    return 'Promise' in window &&\n    // Some of these methods are missing from\n    // Firefox/Chrome experimental implementations\n    'resolve' in window.Promise &&\n    'reject' in window.Promise &&\n    'all' in window.Promise &&\n    'race' in window.Promise &&\n    // Older version of the spec had a resolver object\n    // as the arg rather than a function\n    (function() {\n      var resolve;\n      new window.Promise(function(r) { resolve = r; });\n      return typeof resolve === 'function';\n    }());\n  });\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);\nmodule.exports=window.Modernizr;if(hadGlobal){window.Modernizr=oldGlobal;}else{delete window.Modernizr;}})(window);"],"sourceRoot":""}